{"version":3,"file":"static/js/132.84a6b0c6.chunk.js","mappings":"yHAiCA,IAAe,IAA0B,wD,mIC8KzC,EAxMgB,WACZ,IAAMA,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GACpBC,GAAWC,EAAAA,EAAAA,MAOXC,GAAiBC,EAAAA,EAAAA,MAAYC,KAC7BC,GAAiBF,EAAAA,EAAAA,MAAYG,KAC7BC,GAAeJ,EAAAA,EAAAA,MAAYI,aAC3BC,GAASL,EAAAA,EAAAA,MAAYK,OAEzBC,GAA8BC,EAAAA,EAAAA,UAAS,CAAC,GAAEC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAAkCL,EAAAA,EAAAA,UAAS,CAAC,GAAEM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAvCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,IAE9BG,EAAAA,EAAAA,YAAU,WACNtB,EAAKuB,mBAAkB,GAEvBC,MAAM,wDAADC,OAAyDpB,EAAc,KAAAoB,OAAId,GAAU,CACtFe,OAAQ,MACRC,QAAS,CACL,eAAgB,sBAGvBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAM,IACtBF,MAAK,SAAAG,GAGF,GAAsB,UAAnB1B,EAA4B,CAC3B,IAMI2B,EALSD,EAAKE,MAAMjB,QAAQkB,SAASC,QAD3B,gBAC0C,KACnCA,QAAQ,WAAY,KACnBA,QAAQ,UAAW,KACnBA,QAAQ,UAAW,KACnBA,QAAQ,SAAU,KAClBA,QAAQ,WAAY,KAE1CJ,EAAKE,MAAMjB,QAAQkB,SAAWF,CAClC,CAEAf,EAAWc,EAAKE,MAAMjB,SAEA,UAAnBX,GAAiD,SAAnBA,GAE7BgB,EAAaU,EAAKE,MAAMb,WAGL,SAAnBf,GACAgB,EAAa,CACTe,UAAWL,EAAKE,MAAMb,UAAUgB,WAG5C,GACJ,GAAG,IAMH,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EACpBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAAA,EAAMC,IAAI,cAAcL,UAAU,WAAWM,QAN/C,WACZzC,EAAS,gBAADsB,OAAiBpB,EAAc,KAAAoB,OAAIjB,EAAc,KAAAiB,OAAIf,GACjE,KAKQ2B,EAAAA,EAAAA,MAAA,OAAKQ,GAAG,kBAAiBN,SAAA,EACzBC,EAAAA,EAAAA,KAAA,OACIF,UAA+B,SAAnBjC,EAA4B,mBAAoB,cAC5DoC,IAAKzB,EAAQ8B,UAEjBN,EAAAA,EAAAA,KAAA,OAAKF,UAAU,gBAAeC,SAAEvB,EAAQ+B,SAEhCV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BF,EAAAA,EAAAA,MAAA,QAAMC,UAAU,wBAAuBC,SAAA,EACb,SAAnBlC,GAAgD,UAAnBA,IAA+B,cAC1C,UAAnBA,GAA8B,YACX,OAAnBA,GAA2B,eAG7BW,EAAQgC,QAAU,EAAIhC,EAAQgC,QAAU,MAEtB,SAAnB3C,GAA6BW,EAAQgC,QAAU,GAAM,SAClC,UAAnB3C,GAAiD,UAAnBA,IAA+B,UAC3C,OAAnBA,GAA2B,UAC3BW,EAAQgC,QAAU,GAAK,OAId,UAAnB3C,IACIgC,EAAAA,EAAAA,MAACY,EAAAA,SAAc,CAAAV,SAAA,EACXF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SAAC,iBAAmB,IAAEvB,EAAQkC,eAEzEb,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,wBAAuBC,SAAC,iBAAmB,IAAEvB,EAAQmC,kBAKrFd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,kBAAiBC,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SAAC,eACvCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAEvB,EAAQkB,eAKvB,UAAnB7B,GAAiD,OAAnBA,KAE3BgC,EAAAA,EAAAA,MAACY,EAAAA,SAAc,CAAAV,SAAA,EACXC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SAAC,WAIpCnB,EAAUgC,QAENZ,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SAE9BnB,EAAUgC,OAAOC,KAAI,SAAAC,GAAQ,OACxBd,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACnCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAeG,IAAG,kCAAAhB,OAAoC6B,EAASC,WAAaZ,IAAKW,EAASE,iBADhEF,EAASE,cAEhD,OAKlBhB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,SAAC,6BAGjDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SAAC,QAEpCnB,EAAUqC,KAENjB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SAE9BnB,EAAUqC,IAAIJ,KAAI,SAAAC,GAAQ,OACrBd,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACnCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAeG,IAAG,kCAAAhB,OAAoC6B,EAASC,WAAaZ,IAAKW,EAASE,iBADhEF,EAASE,cAEhD,OAKlBhB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,SAAC,yBAG1B,UAAnBlC,IACIgC,EAAAA,EAAAA,MAACY,EAAAA,SAAc,CAAAV,SAAA,EACXC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SAAC,SAEpCnB,EAAUsC,MAENlB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,SAE9BnB,EAAUsC,KAAKL,KAAI,SAAAC,GAAQ,OACtBd,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wBAAuBC,UACnCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,eAAeG,IAAG,kCAAAhB,OAAoC6B,EAASC,WAAaZ,IAAKW,EAASE,iBADhEF,EAASE,cAEhD,OAKlBhB,EAAAA,EAAAA,KAAA,OAAKF,UAAU,0BAAyBC,SAAC,gCAWjD,SAAnBlC,IAEGgC,EAAAA,EAAAA,MAACY,EAAAA,SAAc,CAAAV,SAAA,EACXC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yBAAwBC,SAAC,eACxCC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,oBAAmBC,SAE1BnB,EAAUgB,WACNhB,EAAUgB,UAAUiB,KAAI,SAACM,EAAUC,GAAK,OACnCpB,EAAAA,EAAAA,KAAA,QAAAD,SAEOqB,IAAUxC,EAAUgB,UAAUyB,OAAS,EACnCF,EAASA,SAASlD,KAElBkD,EAASA,SAASlD,KAAO,MALzBkD,EAASA,SAASlD,KAOvB,cAY/C,C","sources":["shared/assets/img/back.svg","collection/pages/Details.js"],"sourcesContent":["var _rect, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBack(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    width: 40,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    height: 39,\n    rx: 19.5,\n    stroke: \"#fff\",\n    width: 39,\n    x: 0.5,\n    y: 0.5\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m17 20-.7071-.7071-.7071.7071.7071.7071zm5.2929-6.7071-6 6 1.4142 1.4142 6-6zm-6 7.4142 6 6 1.4142-1.4142-6-6z\",\n    fill: \"#fff\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBack);\nexport default __webpack_public_path__ + \"static/media/back.130646437979786be8370a1fdf68655a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\n\r\nimport './Details.css';\r\n\r\nimport back from '../../shared/assets/img/back.svg';\r\nconst Details = () => {\r\n    const auth = useContext(AuthContext);\r\n    let navigate = useNavigate();\r\n\r\n    /************************************************************\r\n     * Initial load and data needed. Here we grab the info we need\r\n     * from the params and set edit and our movies list\r\n     ***********************************************************/\r\n    // Grab the collection name and id from the parameters\r\n    let collectionType = useParams().type;\r\n    let collectionName = useParams().name;\r\n    let collectionId = useParams().collectionId;\r\n    let itemId = useParams().itemId;\r\n\r\n    const [details, setDetails] = useState({});\r\n    const [providers, setProviders] = useState({}); // List of providers to watch\r\n\r\n    useEffect(() => {\r\n        auth.showFooterHandler(false);\r\n        // Get all the items in the collection to check if any items in the search are already in the collection\r\n        fetch(`https://choice-champ-backend.glitch.me/media/getInfo/${collectionType}/${itemId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            // Remove all the html tags from the overview string\r\n            // This is specifically for board games because the overview is in html\r\n            if(collectionType === 'board') {\r\n                const regex = /(<([^>]+)>)/gi;\r\n                let string = data.media.details.overview.replace(regex, \" \");\r\n                let string2 = string.replace(/&mdash;/g, \"-\");\r\n                let string3 = string2.replace(/&nbsp;/g, \" \");\r\n                let string4 = string3.replace(/&quot;/g, '\"');\r\n                let string5 = string4.replace(/&amp;/g, \"&\");\r\n                let string6 = string5.replace(/&rsquo;/g, \"'\");\r\n                \r\n                data.media.details.overview = string6;\r\n            }\r\n\r\n            setDetails(data.media.details);\r\n\r\n            if(collectionType !== 'board' || collectionType !== 'game') {\r\n                // Set the providers to the providers object\r\n                setProviders(data.media.providers);\r\n            } \r\n            \r\n            if (collectionType === 'game') {\r\n                setProviders({\r\n                    platforms: data.media.providers.platforms\r\n                });\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const navBack = () => {\r\n        navigate(`/collections/${collectionType}/${collectionName}/${collectionId}`);\r\n    }\r\n\r\n    return (\r\n        <div className='content'>\r\n            <img src={back} alt=\"Back symbol\" className=\"top-left\" onClick={navBack} />\r\n            <div id=\"content-details\">\r\n            <img\r\n                className={ collectionType === 'game' ? 'details-img-game' :'details-img' }\r\n                src={details.poster}\r\n            />\r\n            <div className='details-title'>{details.title}</div>\r\n            {\r\n                    <div className='details-section'>\r\n                        <span className='details-section-title'>\r\n                            { (collectionType === 'game' || collectionType === 'board') && ' Play Time:' } \r\n                            { collectionType === 'movie' && ' Runtime:' }\r\n                            { collectionType === 'tv' && ' Seasons:' }\r\n                        </span> \r\n                        {\r\n                            details.runtime > 0 ? details.runtime : 'N/A'\r\n                        }\r\n                        { (collectionType === 'game' && details.runtime > 0) && ' hour' } \r\n                        { (collectionType === 'movie' || collectionType === 'board') && ' minute' } \r\n                        { collectionType === 'tv' && ' season' }\r\n                        { details.runtime > 1 && 's' }\r\n                    </div>\r\n            }\r\n            {\r\n                collectionType === 'board' && (\r\n                    <React.Fragment>\r\n                        <div className='details-section'>\r\n                            <span className='details-section-title'>Min Players:</span> {details.minPlayers}\r\n                        </div>\r\n                        <div className='details-section'>\r\n                            <span className='details-section-title'>Max Players:</span> {details.maxPlayers}\r\n                        </div>\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n            <div className='details-section'>\r\n                <div className='details-section-title'>Overview:</div>\r\n                <div className='details-overview'>{details.overview}</div>\r\n            </div>\r\n\r\n            { \r\n                \r\n                (collectionType === 'movie' || collectionType === 'tv') && \r\n                (\r\n                    <React.Fragment>\r\n                        <div className='details-provider-title'>Stream</div>\r\n                        { \r\n                            // Q: How can I check to see if the providers.stream array is empty?\r\n                            // A: Use providers.stream.length\r\n                            providers.stream ?\r\n                            (\r\n                                <div className='details-provider-list'>\r\n                                    {\r\n                                        providers.stream.map(provider => (\r\n                                            (<div className='details-provider-item' key={provider.provider_name}>\r\n                                                <img className='provider-img' src={`https://image.tmdb.org/t/p/w500${provider.logo_path}`} alt={provider.provider_name} />\r\n                                            </div>)\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            ) : (\r\n                                <div className='providers-not-available'>Not available to stream</div>\r\n                            )\r\n                        }\r\n                        <div className='details-provider-title'>Buy</div>\r\n                        { \r\n                            providers.buy ?\r\n                            (\r\n                                <div className='details-provider-list'>\r\n                                    {\r\n                                        providers.buy.map(provider => (\r\n                                            (<div className='details-provider-item' key={provider.provider_name}>\r\n                                                <img className='provider-img' src={`https://image.tmdb.org/t/p/w500${provider.logo_path}`} alt={provider.provider_name} />\r\n                                            </div>)\r\n                                        ))\r\n                                    }\r\n                                </div>\r\n                            ) : (\r\n                                <div className='providers-not-available'>Not available to buy</div>\r\n                            )\r\n                        }\r\n                        {   collectionType === 'movie' && (\r\n                                <React.Fragment>\r\n                                    <div className='details-provider-title'>Rent</div>\r\n                                    { \r\n                                        providers.rent ? \r\n                                        (\r\n                                            <div className='details-provider-list'>\r\n                                                {\r\n                                                    providers.rent.map(provider => (\r\n                                                        (<div className='details-provider-item' key={provider.provider_name}>\r\n                                                            <img className='provider-img' src={`https://image.tmdb.org/t/p/w500${provider.logo_path}`} alt={provider.provider_name} />\r\n                                                        </div>)\r\n                                                    ))\r\n                                                }\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className='providers-not-available'>Not available to rent</div>\r\n                                        )\r\n                                    }\r\n                                </React.Fragment>\r\n                             )\r\n                        }\r\n                    </React.Fragment>\r\n                )\r\n            }\r\n            { \r\n                \r\n                (collectionType === 'game') && \r\n                (\r\n                    <React.Fragment>\r\n                        <div className='details-provider-title'>Platforms</div>\r\n                        <div className='details-platforms'>\r\n                            {\r\n                                providers.platforms && (\r\n                                    providers.platforms.map((platform, index) => (\r\n                                        (<span key={platform.platform.name}>\r\n                                            {\r\n                                                index === providers.platforms.length - 1 ? (\r\n                                                    platform.platform.name\r\n                                                ) : \r\n                                                    platform.platform.name + ', '\r\n                                            }\r\n                                        </span>)\r\n                                    ))\r\n                                )\r\n                            }\r\n                        </div>\r\n                            \r\n                    </React.Fragment>\r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Details;"],"names":["auth","useContext","AuthContext","navigate","useNavigate","collectionType","useParams","type","collectionName","name","collectionId","itemId","_useState","useState","_useState2","_slicedToArray","details","setDetails","_useState3","_useState4","providers","setProviders","useEffect","showFooterHandler","fetch","concat","method","headers","then","res","json","data","string6","media","overview","replace","platforms","_jsxs","className","children","_jsx","src","back","alt","onClick","id","poster","title","runtime","React","minPlayers","maxPlayers","stream","map","provider","logo_path","provider_name","buy","rent","platform","index","length"],"sourceRoot":""}