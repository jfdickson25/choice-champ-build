{"version":3,"file":"static/js/123.84eec6bf.chunk.js","mappings":"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","sources":["shared/assets/img/back.svg","Party/pages/CreateParty.js","shared/components/FormElements/Button.js"],"sourcesContent":["var _rect, _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgBack(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"none\",\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    width: 40,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    height: 39,\n    rx: 19.5,\n    stroke: \"#fff\",\n    width: 39,\n    x: 0.5,\n    y: 0.5\n  })), _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m17 20-.7071-.7071-.7071.7071.7071.7071zm5.2929-6.7071-6 6 1.4142 1.4142 6-6zm-6 7.4142 6 6 1.4142-1.4142-6-6z\",\n    fill: \"#fff\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBack);\nexport default __webpack_public_path__ + \"static/media/back.130646437979786be8370a1fdf68655a.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport circle from '../../shared/assets/img/circle.png';\r\nimport check from '../../shared/assets/img/check.png';\r\nimport back from '../../shared/assets/img/back.svg';\r\n\r\nimport './CreateParty.css';\r\nimport Button from '../../shared/components/FormElements/Button';\r\n\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport Loading from '../../shared/components/Loading';\r\n\r\nconst CreateParty = props => {\r\n    const auth = useContext(AuthContext);\r\n\r\n    const [collections, setCollections] = useState([]);\r\n    const [mediaType, setMediaType] = useState('movie');\r\n    const [selectAlert, setSelectAlert] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [secretMode, setSecretMode] = useState(false);\r\n    const [includeWatched, setIncludeWatched] = useState(false);\r\n    const [superChoice, setSuperChoice] = useState(false);\r\n    const [navingBack, setNavingBack] = useState(false);\r\n    const [activeMediaType, setActiveMediaType] = useState('movie');\r\n\r\n    const [pressingMovie, setPressingMovie] = useState(false);\r\n    const [pressingTv, setPressingTv] = useState(false);\r\n    const [pressingGame, setPressingGame] = useState(false);\r\n    const [pressingBoard, setPressingBoard] = useState(false);\r\n\r\n    let navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        auth.showFooterHandler(true);\r\n        // Make a fetch post request to collections with the userId and setCollections to the response\r\n        fetch(`https://choice-champ-backend.glitch.me/collections/movie/${auth.userId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setCollections(data.collections);\r\n            setIsLoading(false);\r\n        })\r\n    }, []);\r\n\r\n    const addRemoveItem = (itemId) => {\r\n        if(selectAlert) {\r\n            setSelectAlert(false);\r\n        }\r\n\r\n        // Find the item in the array and toggle the selected value\r\n        const updatedCollections = collections.map(collection => {\r\n            if(collection._id === itemId) {\r\n                collection.selected = !collection.selected;\r\n            }\r\n            return collection;\r\n        });\r\n\r\n        setCollections(updatedCollections);\r\n    }\r\n\r\n    const navToPartyWait = () => {\r\n        const selectedCollections = collections.filter(collection => collection.selected);\r\n\r\n        if (selectedCollections.length === 0) {\r\n            setSelectAlert(true);\r\n            return;\r\n        }\r\n\r\n        const collectionIds = selectedCollections.map(collection => collection._id);\r\n\r\n        fetch('https://choice-champ-backend.glitch.me/party', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                    collections: collectionIds,\r\n                    mediaType: mediaType,\r\n                    secretMode: secretMode,\r\n                    includeWatched: includeWatched,\r\n                    superChoice: superChoice,\r\n                    owner: auth.userId\r\n            })\r\n        })\r\n        .then(res => {\r\n            return res.json();\r\n        })\r\n        .then(data => {\r\n            // Route to the party page\r\n            navigate(`/party/wait/${data.partyCode}`);\r\n        });\r\n    }\r\n\r\n    const navBack = () => {\r\n        setNavingBack(true);\r\n        setTimeout(() => {\r\n            setNavingBack(false);\r\n            navigate('/party');\r\n        }, 1000);\r\n    }\r\n\r\n    const mediaTypeHandler = (type) => {\r\n\r\n        setIsLoading(true);\r\n        setMediaType(type);\r\n\r\n        // Make a fetch post request to collections with the userId and setCollections to the response\r\n        fetch(`https://choice-champ-backend.glitch.me/collections/${type}/${auth.userId}`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.json())\r\n        .then(data => {\r\n            setSelectAlert(false);\r\n            setCollections(data.collections);\r\n            setIsLoading(false);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='content'>\r\n                {\r\n                    navingBack ? \r\n                    (<img src=\"https://cdn.glitch.global/ebf12691-ad1e-4a83-81e2-641b9d7c5f64/back-button-active.png?v=1702137193420\" alt=\"Back symbol\" className=\"top-left clickable\" style={{animation: 'button-press .75s'}} />) : \r\n                    (<img src=\"https://cdn.glitch.global/ebf12691-ad1e-4a83-81e2-641b9d7c5f64/back-button.png?v=1702137134668\" alt=\"Back symbol\" className=\"top-left clickable\" onClick={navBack} />)\r\n                }\r\n                <h2 className='title'>Create Party</h2>\r\n                <div className='create-divider'></div>\r\n                <p className='option-text'>Secret Mode</p>\r\n                <img className='option-img' src={ secretMode ? check : circle } onClick={() => { setSecretMode(!secretMode) }} />\r\n                <p className='option-subtext'>Party members will not see each other's votes</p>                \r\n                <p className='option-text'>Include Watched</p>\r\n                <img className='option-img' src={ includeWatched ? check : circle } onClick={() => { setIncludeWatched(!includeWatched) }} />\r\n                <p className='option-subtext'>Include items that have been marked as watched/played</p>  \r\n                <p className='option-text'>Super Choice Mode</p>\r\n                <img className='option-img' src={ superChoice ? check : circle } onClick={() => { setSuperChoice(!superChoice) }} />\r\n                <p className='option-subtext'>\r\n                    Super choice mode allows for more passionate voting. Double tap to star a choice to ensure it moves on to the next round.\r\n                    All party members will see the star in subsequent rounds and it cannot be starred again.\r\n                </p>\r\n                <button \r\n                    className={`media-type-btn ${ activeMediaType === 'movie' ? 'active-movie' : 'movie'}`} \r\n                    style={ pressingMovie ? {animation: 'button-press .75s', marginTop: '30px'} : { marginTop: '30px' }} \r\n                    onClick={() => { \r\n                        setActiveMediaType('movie');\r\n                        setPressingMovie(true);\r\n                        mediaTypeHandler('movie') \r\n                        setTimeout(() => {\r\n                            setPressingMovie(false);\r\n                        }, 750);\r\n                    }}\r\n                >\r\n                        Movies\r\n                </button>\r\n                <button \r\n                    className={`media-type-btn ${ activeMediaType === 'tv' ? 'active-tv' : 'tv'}`} \r\n                    style={ pressingTv ? {animation: 'button-press .75s'} : null}\r\n                    onClick={() => { \r\n                        setActiveMediaType('tv');\r\n                        setPressingTv(true);\r\n                        mediaTypeHandler('tv');\r\n                        setTimeout(() => {\r\n                            setPressingTv(false);\r\n                        }, 750); \r\n                    }}\r\n                >\r\n                    TV Shows\r\n                </button>\r\n                <button \r\n                    className={`media-type-btn ${ activeMediaType === 'game' ? 'active-game' : 'game'}`} \r\n                    style={ pressingGame ? {animation: 'button-press .75s'} : null}\r\n                    onClick={() => { \r\n                        setActiveMediaType('game');\r\n                        setPressingGame(true);\r\n                        mediaTypeHandler('game');\r\n                        setTimeout(() => {\r\n                            setPressingGame(false);\r\n                        }, 750);\r\n                    }}\r\n                >\r\n                    Video Games\r\n                </button>\r\n                <button \r\n                    className={`media-type-btn ${ activeMediaType === 'board' ? 'active-board' : 'board'}`} \r\n                    style={ pressingBoard ? {animation: 'button-press .75s', marginBottom: '30px'} : { marginBottom: '30px' }}\r\n                    onClick={() => { \r\n                        setActiveMediaType('board');\r\n                        setPressingBoard(true);\r\n                        mediaTypeHandler('board');\r\n                        setTimeout(() => {\r\n                            setPressingBoard(false);\r\n                        }, 750);\r\n                    }}\r\n                >\r\n                    Board Games\r\n                </button>\r\n                \r\n                <div className='create-party-collections'>\r\n                    \r\n                { isLoading ? <Loading type='beat' className='list-loading-create' size={20} /> : \r\n                        collections.length > 0 ?\r\n                            collections.map(collection => (   \r\n                                collection.items.length > 0 &&\r\n                                <div key={collection._id} className='create-party-collection' onClick={() => { addRemoveItem(collection._id) }}>\r\n                                    <img id={ collection._id } src={ collection.selected ? check : circle} className='create-party-selectable' />\r\n                                    <div className={`create-party-collection-name color-${mediaType}`}>{collection.name}</div>\r\n                                </div>\r\n                        ))\r\n                        : <div className='no-collections-found'>No collections found for this media type</div>\r\n                }\r\n                </div>\r\n                <Button type=\"button\" className='create-party-btn' onClick={navToPartyWait}>Create Party</Button>\r\n                { selectAlert && <div className='select-alert'>Please select at least one collection</div> }\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default CreateParty;","import React, { useState } from 'react';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n    const [bounce, setBounce] = useState(false);\r\n\r\n    const action = () => {\r\n        if (props.onClick) {\r\n            setBounce(true);\r\n            setTimeout(() => {\r\n                setBounce(false);\r\n                props.onClick();\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { \r\n                bounce ? (\r\n                    <button \r\n                        type={props.type} \r\n                        disabled={props.disabled}\r\n                        className={props.className}\r\n                        style={ props.backgroundColor ? {animation: 'button-press .75s', backgroundColor: props.backgroundColor} : {animation: 'button-press .75s', backgroundColor: '#dd9b14' }}\r\n                    >\r\n                        {props.children}\r\n                    </button>\r\n                ) : (\r\n                    <button \r\n                        type={props.type} \r\n                        disabled={props.disabled}\r\n                        onClick={action}\r\n                        className={props.className}\r\n                    >\r\n                        {props.children}\r\n                    </button>\r\n\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Button;"],"names":["props","auth","useContext","AuthContext","_useState","useState","_useState2","_slicedToArray","collections","setCollections","_useState3","_useState4","mediaType","setMediaType","_useState5","_useState6","selectAlert","setSelectAlert","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","secretMode","setSecretMode","_useState11","_useState12","includeWatched","setIncludeWatched","_useState13","_useState14","superChoice","setSuperChoice","_useState15","_useState16","navingBack","setNavingBack","_useState17","_useState18","activeMediaType","setActiveMediaType","_useState19","_useState20","pressingMovie","setPressingMovie","_useState21","_useState22","pressingTv","setPressingTv","_useState23","_useState24","pressingGame","setPressingGame","_useState25","_useState26","pressingBoard","setPressingBoard","navigate","useNavigate","useEffect","showFooterHandler","fetch","concat","userId","method","headers","then","res","json","data","mediaTypeHandler","type","_jsx","React","children","_jsxs","className","src","alt","style","animation","onClick","setTimeout","check","circle","marginTop","marginBottom","Loading","size","length","map","collection","items","itemId","updatedCollections","_id","selected","addRemoveItem","id","name","Button","selectedCollections","filter","collectionIds","body","JSON","stringify","owner","partyCode","bounce","setBounce","disabled","backgroundColor"],"sourceRoot":""}